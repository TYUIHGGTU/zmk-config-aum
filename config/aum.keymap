#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// / {
//     chosen {
//         zmk,physical-layout = &matrix_physical_layout;
//     };
// };

/ {
    combos {
        compatible = "zmk,combos";

        btLayer {
            bindings = <&mo 3>;
            key-positions = <45 46>;
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        L0 {
            // --------------------------------------------------------------------------------------------------------------------------------------------------------------------
            // |   ESC   |    Q    |    W    |    E    |    R    |    T    |                                          |    Y    |    U    |    I    |    O    |    P    |    \    |
            // |   TAB   |    A    |    S    |    D    |    F    |    G    |                                          |    H    |    J    |    K    |    L    |    ;    |    '    |
            // |  SHIFT  |    Z    |    X    |    C    |    V    |    B    | CTRL+A  | CTRL+C  |  |  CTRL+V |  CTRL+X |    N    |    M    |    ,    |    .    |    /    |  R CTRL |
            //                               |   GUI   |   DEL   | RETURN  |  SPACE  | ESCAPE  |  |  RETURN |  SPACE  |   TAB   |   BSPC  |  R ALT  |

            bindings = <
&kp ESC         &kp Q  &kp W  &kp E  &kp R         &kp T             &kp LS(LPAR)    &kp LS(RPAR)  &kp Y  &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp CAPSLOCK    &kp A  &kp S  &kp D  &kp F         &kp G             &kp LS(LBRC)    &kp LS(RBRC)  &kp H  &kp J      &kp K      &kp L    &kp SEMI  &kp RET
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C  &kp V         &kp B             &kp LBKT        &kp RBKT      &kp N  &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp BSLH
                                     &kp LEFT_ALT  &kp LEFT_COMMAND  &kp SPACE       &mo 1         &mo 2  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &scroll_encoder &inc_dec_kp C_VOL_UP C_VOL_DN &scroll_encoder>;
        };

        L1 {
            bindings = <
&kp ESC    &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)  &trans    &trans  &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &kp BSPC
&kp TAB    &kp N1        &kp N2      &kp N3         &kp N4        &kp N5         &trans    &trans  &kp N6         &kp N7        &kp N8        &kp N9        &kp N0        &kp RET
&kp LSHFT  &kp MINUS     &kp EQUAL   &kp LBKT       &kp LS(LBRC)  &kp LS(LPAR)   &trans    &trans  &kp SEMI       &kp SQT       &kp COMMA     &kp DOT       &kp FSLH      &kp BSLH
                                                    &trans        &trans         &trans    &trans  &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &scroll_encoder &inc_dec_kp C_VOL_UP C_VOL_DN &scroll_encoder>;
        };

        L2 {
            bindings = <
&kp ESC    &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)  &trans    &trans  &kp LS(CARET)  &kp PG_UP  &kp UP     &kp PG_DN  &kp HOME  &kp BSPC
&kp TAB    &kp N1        &kp N2      &kp N3         &kp N4        &kp N5         &trans    &trans  &kp N6         &kp LEFT   &kp DOWN   &kp RIGHT  &kp END   &kp RET
&kp LSHFT  &kp MINUS     &kp EQUAL   &kp LBKT       &kp LS(LBRC)  &kp LS(LPAR)   &trans    &trans  &kp SEMI       &kp SQT    &kp COMMA  &kp DOT    &kp FSLH  &kp BSLH
                                                    &trans        &trans         &trans    &trans  &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &scroll_encoder &inc_dec_kp C_VOL_UP C_VOL_DN &scroll_encoder>;
        };

        L3 {
            bindings = <
&trans  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3    &bt BT_SEL 4   &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3   &bt BT_DISC 4  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_PRV     &bt BT_NXT     &bt BT_CLR     &bt BT_CLR_ALL  &trans         &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                                     &trans          &trans         &trans    &trans  &trans  &trans
            >;
        };
    };
};
